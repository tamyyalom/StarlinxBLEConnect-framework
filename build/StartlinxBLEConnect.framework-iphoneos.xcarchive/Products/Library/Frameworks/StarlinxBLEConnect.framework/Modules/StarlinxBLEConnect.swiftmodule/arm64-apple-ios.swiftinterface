// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
// swift-module-flags: -target arm64-apple-ios13.1 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name StarlinxBLEConnect
import CoreBluetooth
import CoreLocation
import Foundation
import NordicDFU
import OSLog
import Swift
import UIKit
import _Concurrency
public protocol UpdateTagVersionProtocol : AnyObject {
  func dfuStateDidChange(state: Swift.String)
  func dfuProgressDidChange(part: Swift.Int, totalParts: Swift.Int, to progress: Swift.Int)
}
@_hasMissingDesignatedInitializers public class UpdateTagVersion : NordicDFU.DFUServiceDelegate, NordicDFU.DFUProgressDelegate {
  public class func loadFileSync(url: Foundation.NSURL, completion: (_ path: Swift.String, _ error: Foundation.NSError?) -> Swift.Void)
  public func updateTagVersion(url: Swift.String, peripheral: CoreBluetooth.CBPeripheral, delegate: StarlinxBLEConnect.UpdateTagVersionProtocol)
  @objc public func dfuProgressDidChange(for part: Swift.Int, outOf totalParts: Swift.Int, to progress: Swift.Int, currentSpeedBytesPerSecond: Swift.Double, avgSpeedBytesPerSecond: Swift.Double)
  @objc public func dfuStateDidChange(to state: NordicDFU.DFUState)
  @objc public func dfuError(_ error: NordicDFU.DFUError, didOccurWithMessage message: Swift.String)
  @objc deinit
}
public protocol BLEConnectedDelegate : AnyObject {
  func didChangeStatus(state: CoreBluetooth.CBPeripheralState, deviceId: Swift.String)
  func didDisconnect()
  func readTagValue(data: Foundation.Data)
  func dfuStateDidChange(state: Swift.String)
  func dfuProgressDidChange(part: Swift.Int, totalParts: Swift.Int, to progress: Swift.Int)
}
public struct LogHelper {
  public static func logError(err: Swift.String)
  public static func logInfo(message: Swift.String)
  public static func logDebug(message: Swift.String)
}
public struct UUIDModel {
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class BLEConnectedManager : ObjectiveC.NSObject, UIKit.UIPopoverPresentationControllerDelegate, CoreBluetooth.CBPeripheralDelegate, StarlinxBLEConnect.UpdateTagVersionProtocol {
  @_Concurrency.MainActor(unsafe) public var connected: Swift.Bool
  @_Concurrency.MainActor(unsafe) weak public var delegate: StarlinxBLEConnect.BLEConnectedDelegate?
  @_Concurrency.MainActor(unsafe) public func start(uuidModels: [StarlinxBLEConnect.UUIDModel], lastConnectedSensor: StarlinxBLEConnect.UUIDModel, completionHandler: @escaping (_ succes: Swift.Bool, _ message: Swift.String) -> Swift.Void)
  @_Concurrency.MainActor(unsafe) public func updateTagVersion(url: Swift.String)
  @_Concurrency.MainActor(unsafe) public func isConnected() -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func stopLookingForTag()
  @_Concurrency.MainActor(unsafe) @objc public func peripheral(_ peripheral: CoreBluetooth.CBPeripheral, didDiscoverServices error: Swift.Error?)
  @_Concurrency.MainActor(unsafe) @objc public func peripheral(_ peripheral: CoreBluetooth.CBPeripheral, didDiscoverCharacteristicsFor service: CoreBluetooth.CBService, error: Swift.Error?)
  @_Concurrency.MainActor(unsafe) @objc public func peripheral(_ peripheral: CoreBluetooth.CBPeripheral, didUpdateNotificationStateFor characteristic: CoreBluetooth.CBCharacteristic, error: Swift.Error?)
  @_Concurrency.MainActor(unsafe) public func dfuStateDidChange(state: Swift.String)
  @_Concurrency.MainActor(unsafe) public func dfuProgressDidChange(part: Swift.Int, totalParts: Swift.Int, to progress: Swift.Int)
  @_Concurrency.MainActor(unsafe) @objc public func peripheral(_ peripheral: CoreBluetooth.CBPeripheral, didUpdateValueFor characteristic: CoreBluetooth.CBCharacteristic, error: Swift.Error?)
  @objc override dynamic public init()
  @objc deinit
}
extension StarlinxBLEConnect.BLEConnectedManager : CoreBluetooth.CBCentralManagerDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func centralManager(_ central: CoreBluetooth.CBCentralManager, didDiscover peripheral: CoreBluetooth.CBPeripheral, advertisementData: [Swift.String : Any], rssi RSSI: Foundation.NSNumber)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func centralManager(_ central: CoreBluetooth.CBCentralManager, willRestoreState dict: [Swift.String : Any])
  @_Concurrency.MainActor(unsafe) @objc dynamic public func centralManager(_ central: CoreBluetooth.CBCentralManager, didConnect peripheral: CoreBluetooth.CBPeripheral)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func centralManager(_ central: CoreBluetooth.CBCentralManager, didFailToConnect peripheral: CoreBluetooth.CBPeripheral, error: Swift.Error?)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func centralManager(_ central: CoreBluetooth.CBCentralManager, didDisconnectPeripheral peripheral: CoreBluetooth.CBPeripheral, error: Swift.Error?)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func centralManagerDidUpdateState(_ central: CoreBluetooth.CBCentralManager)
}
